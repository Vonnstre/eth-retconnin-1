name: Build & Publish (Top-10k)

on:
  workflow_dispatch:

env:
  PYTHONUNBUFFERED: "1"
  ETH_RPC_URL: "https://cloudflare-eth.com"
  ETH_PRICE_SOURCE: "coingecko"
  ETH_PRICE_USD: "3000"
  TOKENS_JSON: ""

jobs:
  shard:
    runs-on: ubuntu-latest
    timeout-minutes: 350
    strategy:
      fail-fast: false
      matrix:
        shard: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare candidates & shard
        run: |
          mkdir -p data/raw data/shards
          if [ ! -f data/raw/candidates.csv ]; then
            python scripts/harvest_candidates.py --out data/raw/candidates.csv --lookback-blocks 18000 --concurrency 8
          fi
          python scripts/split_candidates.py --input data/raw/candidates.csv --parts 20 --outdir data/shards
          ls -lh data/shards

      - name: Run pipeline (shard)
        run: |
          SHARD="data/shards/shard_${{ matrix.shard }}.csv"
          OUT="data/run_shard_${{ matrix.shard }}"
          mkdir -p "$OUT"
          python scripts/bulletproof_pipeline.py \
            --input "$SHARD" --out "$OUT" \
            --usd-threshold 10000 --top-n-multicall 3000 \
            --eth-conc 16 --eth-batch 200 --token-conc 20 --token-batch 500
          chmod +x scripts/buyer_verifier.sh || true

      - name: Upload shard artifact
        uses: actions/upload-artifact@v4
        with:
          name: shard_${{ matrix.shard }}
          path: data/run_shard_${{ matrix.shard }}

  finalize:
    needs: [shard]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Merge shards and produce final top10k
        run: |
          python scripts/merge_shards.py --indir artifacts --outdir data/run_final

      - name: Compute merkle & sample & package
        run: |
          python scripts/merkle_proofs.py --input data/run_final/top10k_whales_raw.csv --out data/run_final/delivery --samples 0 1 2 3 4 5 6 7 8 9
          python scripts/proof_and_sample.py --dataset data/run_final/top10k_whales_raw.csv --out data/run_final/delivery --sample-size 100
          rm -f data/run_final/delivery/ed25519_private.pem || true
          mkdir -p data/run_final/delivery/scripts data/run_final/delivery/docs
          cp docs/DELIVERY_README.md data/run_final/delivery/docs/ || true
          cp scripts/buyer_verifier.sh data/run_final/delivery/scripts/ || true
          chmod +x data/run_final/delivery/scripts/buyer_verifier.sh || true
          cd data/run_final/delivery
          zip -r "Top10k_Delivery_$(date +%s).zip" ./*
          ls -lh *.zip

      - name: Upload delivery ZIP
        uses: actions/upload-artifact@v4
        with:
          name: top10k_delivery
          path: data/run_final/delivery/*.zip
